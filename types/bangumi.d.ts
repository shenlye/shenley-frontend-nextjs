/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/calendar": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 每日放送 */
        get: operations["getCalendar"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/search/subject/{keywords}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 条目搜索 */
        get: operations["searchSubjectByKeywords"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * @description 条目类型 <br> 1 = book <br> 2 = anime <br> 3 = music <br> 4 = game <br> 6 = real
         * @example 2
         * @enum {integer}
         */
        Legacy_SubjectType: 1 | 2 | 3 | 4 | 6;
        Legacy_SubjectSmall: {
            /**
             * @description 条目 ID
             * @example 12
             */
            id?: number;
            /**
             * @description 条目地址
             * @example https://bgm.tv/subject/12
             */
            url?: string;
            /**
             * SubjectType
             * @description 条目类型
             *     - `1` 为 书籍
             *     - `2` 为 动画
             *     - `3` 为 音乐
             *     - `4` 为 游戏
             *     - `6` 为 三次元
             *
             *     没有 `5`
             * @example 2
             * @enum {integer}
             */
            type?: 1 | 2 | 3 | 4 | 6;
            /**
             * @description 条目名称
             * @example ちょびっツ
             */
            name?: string;
            /**
             * @description 条目中文名称
             * @example 人形电脑天使心
             */
            name_cn?: string;
            /**
             * @description 剧情简介
             * @example 在不久的将来,电子技术飞速发展,电脑成为人们生活中不可缺少的一部分.主角的名字是本须和秀树,是个19岁的少年,由于考试失败,来到东京上补习班,过着贫穷潦倒的生活……\r\n到达东京的第一天,他很幸运的在垃圾堆捡到一个人型电脑,一直以来秀树都非常渴望拥有个人电脑.当他抱着她带返公寓后,却不知如何开机,在意想不到的地方找到开关并开启后,故事就此展开\r\n本须和秀树捡到了人型计算机〔唧〕。虽然不晓得她到底是不是〔Chobits〕，但她的身上似乎藏有极大的秘密。看到秀树为了钱而烦恼，唧出去找打工，没想到却找到了危险的工作！为了让秀树开心，唧开始到色情小屋打工。但她在遭到过度激烈的强迫要求之后失控。让周遭计算机因此而强制停摆。\r\n另一方面，秀树发现好友新保与补习班的清水老师有着不可告人的关系……
             */
            summary?: string;
            /**
             * @description 放送开始日期
             * @example 2002-04-02
             */
            air_date?: string;
            /**
             * @description 放送星期
             * @example 2
             */
            air_weekday?: number;
            /** @description 封面 */
            images?: {
                /** @example https://lain.bgm.tv/pic/cover/l/c2/0a/12_24O6L.jpg */
                large?: string;
                /** @example https://lain.bgm.tv/pic/cover/c/c2/0a/12_24O6L.jpg */
                common?: string;
                /** @example https://lain.bgm.tv/pic/cover/m/c2/0a/12_24O6L.jpg */
                medium?: string;
                /** @example https://lain.bgm.tv/pic/cover/s/c2/0a/12_24O6L.jpg */
                small?: string;
                /** @example https://lain.bgm.tv/pic/cover/g/c2/0a/12_24O6L.jpg */
                grid?: string;
            };
            /**
             * @description 话数
             * @example 27
             */
            eps?: number;
            /**
             * @description 话数
             * @example 27
             */
            eps_count?: number;
            /** @description 评分 */
            rating?: {
                /**
                 * @description 总评分人数
                 * @example 2289
                 */
                total?: number;
                /** @description 各分值评分人数 */
                count?: {
                    /** @example 5 */
                    1?: number;
                    /** @example 3 */
                    2?: number;
                    /** @example 4 */
                    3?: number;
                    /** @example 6 */
                    4?: number;
                    /** @example 46 */
                    5?: number;
                    /** @example 267 */
                    6?: number;
                    /** @example 659 */
                    7?: number;
                    /** @example 885 */
                    8?: number;
                    /** @example 284 */
                    9?: number;
                    /** @example 130 */
                    10?: number;
                };
                /**
                 * @description 评分
                 * @example 7.6
                 */
                score?: number;
            };
            /**
             * @description 排名
             * @example 573
             */
            rank?: number;
            /** @description 收藏人数 */
            collection?: {
                /**
                 * @description 想做
                 * @example 608
                 */
                wish?: number;
                /**
                 * @description 做过
                 * @example 3010
                 */
                collect?: number;
                /**
                 * @description 在做
                 * @example 103
                 */
                doing?: number;
                /**
                 * @description 搁置
                 * @example 284
                 */
                on_hold?: number;
                /**
                 * @description 抛弃
                 * @example 86
                 */
                dropped?: number;
            };
            user_rating?: number;  // 用户评分
            user_comment?: string; // 用户评论
        };
        Legacy_SubjectMedium: components["schemas"]["Legacy_SubjectSmall"] & {
            /** @description 角色信息 */
            crt?: (components["schemas"]["Legacy_Character"] & {
                /**
                 * @description 角色类型
                 * @example 主角
                 */
                role_name?: string;
            })[];
            /** @description 制作人员信息 */
            staff?: (components["schemas"]["Legacy_Person"] & {
                /**
                 * @description 人物类型
                 * @example 主角
                 */
                role_name?: string;
                /** @description 职位 */
                jobs?: string[];
            })[];
        };
        Legacy_SubjectLarge: components["schemas"]["Legacy_SubjectMedium"] & {
            /** @description 章节列表 */
            eps?: components["schemas"]["Legacy_Episode"][];
            /** @description 讨论版 */
            topic?: components["schemas"]["Legacy_Topic"][];
            /** @description 评论日志 */
            blog?: components["schemas"]["Legacy_Blog"][];
        };
        /**
         * @description 章节类型 <br> 0 = 本篇 <br> 1 = 特别篇 <br> 2 = OP <br> 3 = ED <br> 4 = 预告/宣传/广告 <br> 5 = MAD <br> 6 = 其他
         * @example 0
         * @enum {integer}
         */
        Legacy_EpisodeType: 0 | 1 | 2 | 3 | 4 | 5 | 6;
        /** @description 章节信息 */
        Legacy_Episode: {
            /**
             * @description 章节 ID
             * @example 1027
             */
            id?: number;
            /**
             * @description 章节地址
             * @example https://bgm.tv/ep/1027
             */
            url?: string;
            type?: components["schemas"]["Legacy_EpisodeType"];
            /**
             * @description 集数
             * @example 1
             */
            sort?: number;
            /**
             * @description 标题
             * @example ちぃ 目覚める
             */
            name?: string;
            /**
             * @description 简体中文标题
             * @example 叽，觉醒了
             */
            name_cn?: string;
            /**
             * @description 时长
             * @example 24m
             */
            duration?: string;
            /**
             * @description 放送日期
             * @example 2002-04-03
             */
            airdate?: string;
            /**
             * @description 回复数量
             * @example 9
             */
            comment?: number;
            /** @description 简介 */
            desc?: string;
            /**
             * @description 放送状态 <br> Air = 已放送 <br> Today = 正在放送 <br> NA = 未放送
             * @example Air
             * @enum {string}
             */
            status?: "Air" | "Today" | "NA";
        };
        /** @description 讨论版 */
        Legacy_Topic: {
            /** @description ID */
            id?: number;
            /** @description 地址 */
            url?: string;
            /** @description 标题 */
            title?: string;
            /** @description 所属对象（条目） ID */
            main_id?: number;
            /** @description 发布时间 */
            timestamp?: number;
            /** @description 最后回复时间 */
            lastpost?: number;
            /** @description 回复数 */
            replies?: number;
            user?: components["schemas"]["Legacy_User"];
        };
        /** @description 日志 */
        Legacy_Blog: {
            /** @description ID */
            id?: number;
            /** @description 地址 */
            url?: string;
            /** @description 标题 */
            title?: string;
            /** @description 概览 */
            summary?: string;
            /** @description 图片 */
            image?: string;
            /** @description 回复数 */
            replies?: number;
            /**
             * @description 发布时间
             * @example 1357144903
             */
            timestamp?: number;
            /**
             * @description 发布时间
             * @example 2013-1-2 16:41
             */
            dateline?: string;
            user?: components["schemas"]["Legacy_User"];
        };
        /** @description 用户信息 */
        Legacy_User: {
            /**
             * @description 用户 id
             * @example 1
             */
            id?: number;
            /**
             * @description 用户主页地址
             * @example https://bgm.tv/user/sai
             */
            url?: string;
            /**
             * @description 用户名
             * @example sai
             */
            username?: string;
            /**
             * @description 昵称
             * @example Sai
             */
            nickname?: string;
            /** @description 头像地址 */
            avatar?: {
                /** @example https://lain.bgm.tv/pic/user/l/000/00/00/1.jpg?r=1391790456 */
                large?: string;
                /** @example https://lain.bgm.tv/pic/user/m/000/00/00/1.jpg?r=1391790456 */
                medium?: string;
                /** @example https://lain.bgm.tv/pic/user/s/000/00/00/1.jpg?r=1391790456 */
                small?: string;
            };
            /**
             * @description 签名
             * @example Awesome!
             */
            sign?: string;
            usergroup?: components["schemas"]["Legacy_UserGroup"];
        };
        /**
         * @description 用户组 <br> 1 = 管理员 <br> 2 = Bangumi 管理猿 <br> 3 = 天窗管理猿 <br> 4 = 禁言用户 <br> 5 = 禁止访问用户 <br> 8 = 人物管理猿 <br> 9 = 维基条目管理猿 <br> 10 = 用户 <br> 11 = 维基人
         * @example 11
         * @enum {integer}
         */
        Legacy_UserGroup: 1 | 2 | 3 | 4 | 5 | 8 | 9 | 10 | 11;
        /** @description 现实人物 */
        Legacy_Person: components["schemas"]["Legacy_Mono"] & {
            info?: components["schemas"]["Legacy_MonoInfo"];
        };
        /** @description 虚拟角色 */
        Legacy_Character: components["schemas"]["Legacy_Mono"] & {
            info?: components["schemas"]["Legacy_MonoInfo"];
            /** @description 声优列表 */
            actors?: components["schemas"]["Legacy_MonoBase"][];
        };
        /** @description 人物（基础模型） */
        Legacy_MonoBase: {
            /** @description 人物 ID */
            id?: number;
            /** @description 人物地址 */
            url?: string;
            /** @description 姓名 */
            name?: string;
            /** @description 肖像 */
            images?: {
                /** @example https://lain.bgm.tv/pic/crt/l/ce/65/32_crt_XMJOj.jpg */
                large?: string;
                /** @example https://lain.bgm.tv/pic/crt/m/ce/65/32_crt_XMJOj.jpg */
                medium?: string;
                /** @example https://lain.bgm.tv/pic/crt/s/ce/65/32_crt_XMJOj.jpg */
                small?: string;
                /** @example https://lain.bgm.tv/pic/crt/g/ce/65/32_crt_XMJOj.jpg */
                grid?: string;
            };
        };
        /** @description 人物 */
        Legacy_Mono: components["schemas"]["Legacy_MonoBase"] & {
            /** @description 简体中文名 */
            name_cn?: string;
            /** @description 回复数量 */
            comment?: number;
            /** @description 收藏人数 */
            collects?: number;
        };
        /** @description 人物信息 */
        Legacy_MonoInfo: {
            /**
             * @description 生日
             * @example 4月13日
             */
            birth?: string;
            /**
             * @description 身高
             * @example 152cm
             */
            height?: string;
            /**
             * @description 性别
             * @example 女
             */
            gender?: string;
            /** @description 别名（另外添加出来的 key 为 0 开始的数字） */
            alias?: {
                /** @description 日文名 */
                jp?: string;
                /** @description 纯假名 */
                kana?: string;
                /** @description 昵称 */
                nick?: string;
                /** @description 罗马字 */
                romaji?: string;
                /** @description 第二中文名 */
                zh?: string;
            };
            /** @description 引用来源 */
            source?: string | string[];
            /** @description 简体中文名 */
            name_cn?: string;
            /** @description 声优 */
            cv?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getCalendar: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 每日放送 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        weekday?: {
                            /** @example Mon */
                            en?: string;
                            /** @example 星期一 */
                            cn?: string;
                            /** @example 月耀日 */
                            ja?: string;
                            /** @example 1 */
                            id?: number;
                        };
                        items?: components["schemas"]["Legacy_SubjectSmall"][];
                    }[];
                };
            };
        };
    };
    searchSubjectByKeywords: {
        parameters: {
            query?: {
                /** @description 条目类型，参考 [SubjectType](#model-Legacy_SubjectType) */
                type?: components["schemas"]["Legacy_SubjectType"];
                /** @description 返回数据大小 <br> 默认为 small */
                responseGroup?: "small" | "medium" | "large";
                /** @description 开始条数 */
                start?: number;
                /** @description 每页条数 <br> 最多 25 */
                max_results?: number;
            };
            header?: never;
            path: {
                /** @description 关键词 <br> 需要 URL Encode */
                keywords: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 搜索结果 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description 总条数 */
                        results?: number;
                        /** @description 结果列表 */
                        list?: components["schemas"]["Legacy_SubjectSmall"][];
                    } | {
                        /** @description 总条数 */
                        results?: number;
                        /** @description 结果列表 */
                        list?: components["schemas"]["Legacy_SubjectMedium"][];
                    } | {
                        /** @description 总条数 */
                        results?: number;
                        /** @description 结果列表 */
                        list?: components["schemas"]["Legacy_SubjectLarge"][];
                    };
                };
            };
        };
    };
}

export type BangumiSubject = components["schemas"]["Legacy_SubjectSmall"];

export type BangumiCollection = {
  collect: BangumiSubject[];
  wish: BangumiSubject[];
  doing: BangumiSubject[];
};

export type CollectionStatus = "wish" | "collect" | "doing";
